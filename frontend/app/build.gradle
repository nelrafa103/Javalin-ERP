/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java'
    id 'application'
        id "com.google.protobuf" version "0.9.4"
    id 'idea' //plugins para la integración con el IDEA.

}

repositories {
    // Use Maven Central for resolving dependencies.

    mavenCentral()

}

dependencies {
 
implementation("io.javalin.community.ssl:ssl-plugin:5.6.1")

//implementation group: 'io.javalin.community.ssl', name: 'ssl-plugin', version: '5.6.1'
    // Use JUnit Jupiter for testing.
    implementation("org.slf4j:slf4j-simple:2.0.7")
        implementation ('com.auth0:java-jwt:4.4.0')  

    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'
    implementation("io.javalin:javalin:5.6.1")
        implementation("io.javalin:javalin-rendering:5.6.1")
                implementation 'org.thymeleaf:thymeleaf:3.1.1.RELEASE'


    implementation("com.fasterxml.jackson.core:jackson-databind:2.15.0")


    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'

     //Librerias Para gRPC
    implementation 'io.grpc:grpc-netty-shaded:1.39.0'
    implementation 'io.grpc:grpc-protobuf:1.39.0'
    implementation 'io.grpc:grpc-stub:1.39.0'
    compileOnly 'org.apache.tomcat:annotations-api:6.0.53' // necessary for Java 9+
    implementation 'com.google.protobuf:protobuf-java:3.17.3'


    
   
}

application {
    // Define the main class for the application.
    mainClass = 'frontend.App'
}


//Tareas para la generación del código.
protobuf {
    protoc {
 if (osdetector.os == "osx") {
      artifact = 'com.google.protobuf:protoc:3.14.0:osx-x86_64'
    } else {
      artifact = 'com.google.protobuf:protoc:3.14.0'
    }
    
        }
    plugins {
        grpc {
            if (osdetector.os == "osx") {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.39.0:osx-x86_64'

            } else {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.39.0'

            }
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }

    generatedFilesBaseDir = "$projectDir/backend/generated"
}

//Tareas para integrar con el
clean {
    delete protobuf.generatedFilesBaseDir
}

idea {
    module {
        // proto files and generated Java files are automatically added as
        // source dirs.
        // If you have additional sources, add them here:
        sourceDirs += file("src/generated");
    }
}



tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
